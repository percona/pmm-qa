{
  "extends": ["airbnb"],
  "parser": "@typescript-eslint/parser",
  "env": {
    "browser": true
  },
  "root": true,
  "plugins": ["eslint-plugin-no-inline-styles"],
  "rules": {
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline"
      }
    ],
    "no-restricted-imports": 0,
    "no-param-reassign": ["error", { "ignorePropertyModificationsForRegex": ["^acc$"] }],
    "max-len": ["error", { "code": 130, "ignoreStrings": true, "ignoreRegExpLiterals": true }],
    "prettier/prettier": ["off"],
    "quotes": ["error", "single"],
    "import/extensions": ["off"],
    "import/no-extraneous-dependencies": [
      "error",
      { "devDependencies": true, "optionalDependencies": false, "peerDependencies": false }
    ],
    "prefer-destructuring": "off",
    "no-plusplus": "off",
    "no-await-in-loop": "off",
    "import/prefer-default-export": ["off"],
    "import/no-unresolved": ["off"],
    "no-duplicate-imports": [
        "error",
        { "includeExports": true }
      ],
    // no-unused-vars doesn't work with typescript
    "no-unused-vars": "off",
    // We use a lot of snake case variables in code interacting with API
    "camelcase": ["off"],
    // It's more convinient to declare big helpers functions below the main method
    "no-use-before-define": ["off"],
    "no-dupe-args": ["error"],
    "no-new-object": ["error"],
    "no-inline-comments": ["error"],
    // "no-magic-numbers": ["error"],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": "import", "next": "*" },
      { "blankLine": "any", "prev": "import", "next": "import" },
      { "blankLine": "always", "prev": "function", "next": "*" },
      { "blankLine": "always", "prev": "if", "next": "*" },
      { "blankLine": "always", "prev": "for", "next": "*" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] }
    ],
    // "no-inline-styles/no-inline-styles": [2],
    // ENABLE LATER
    "max-classes-per-file": ["off"],
    "no-shadow": ["off"],
    // enable it later, it happens because null coalesion operator
    "no-unused-expressions": ["off"],
    "class-methods-use-this": ["off"]
  }
}
