name:  PMM3 Upgrade tests

on:
  workflow_dispatch:
    inputs:
      pmm_ui_tests_branch:
        description: 'pmm-ui-tests repository branch'
        default: 'v3'
        required: true
      pmm_qa_branch:
        description: 'pmm-qa repository branch(for setup)'
        default: 'v3'
        required: true
      pmm_server_start_version:
        description: 'PMM Server version to upgrade (latest|dev-latest|x.xx.x|x.xx.x-rc)'
        default: '3.0.0'
        required: true
      pmm_client_start_version:
        description: 'PMM Client version to upgrade from (dev-latest|pmm2-latest|pmm2-rc|x.xx.x)'
        default: 'pmm2-latest'
        required: true
      upgrade_type:
        description: 'Upgrade way:'
        required: true
        default: 'UI way'
        type: choice
        options:
          - UI way
          - Docker way
          - Podman way
      repository:
        description: 'Upgrade to:'
        required: true
        default: 'experimental'
        type: choice
        options:
          - release
          - testing
          - experimental
  workflow_call:
    inputs:
      pmm_ui_tests_branch:
        description: 'pmm-ui-tests repository branch'
        default: 'main'
        required: false
        type: string        
      pmm_qa_branch:
        description: 'pmm-qa repository branch(for setup)'
        default: 'main'
        required: false
        type: string
      pmm_server_start_version:
        description: 'PMM Server version to upgrade (latest|dev-latest|x.xx.x|x.xx.x-rc)'
        default: 'latest'
        required: false
        type: string
      pmm_client_start_version:
        description: 'PMM Client version to upgrade from (dev-latest|pmm2-latest|pmm2-rc|x.xx.x)'
        default: 'pmm2-latest'
        required: false
        type: string
      upgrade_type:
        description: 'Upgrade way:'
        required: false
        default: 'UI way'
        type: string
      repository:
        description: 'Upgrade to:'
        required: false
        default: 'experimental'
        type: string

jobs:
#  get_versions:
#    name: Get versions
#    uses: ./.github/workflows/pmm-version-getter.yml
#    with:
#      pmm_server_start_version: ${{ inputs.pmm_server_start_version || 'latest'}}
#      repository: ${{ inputs.repository || 'dev-latest'}}
#      matrix_range: 10
  pmm_server_upgrade:
    runs-on: ubuntu-22.04
    name: "Upgrade Tests for pmm sever version: ${{ inputs.pmm_server_start_version }} and pmm client version: ${{ inputs.pmm_client_start_version }}"
    timeout-minutes: 120

    steps:
      - name: 'Checkout UI tests: "${{ inputs.pmm_ui_tests_branch }}"'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.pmm_ui_tests_branch }}
          repository: percona/pmm-ui-tests
          path: ./pmm-ui-tests
      - name: 'Select docker tag for pmm server to upgrade to.'
        id: pmm_server_to_image
        shell: bash
        run: |
          if [[ "${{ inputs.repository }}" = "experimental" ]]; then
          echo "IMAGE=perconalab/pmm-server:3-dev-latest" >> "$GITHUB_OUTPUT"
          fi
          if [[ "${{ inputs.repository }}" = "testing" ]]; then
            rc_latest=$(wget -q "https://registry.hub.docker.com/v2/repositories/perconalab/pmm-server/tags?page_size=25&name=rc" -O - | jq -r .results[].name  | grep 3[.][0-9][.][0-9]-rc$ | sort -V | tail -n1)
            echo "IMAGE=perconalab/pmm-server:$rc_latest" >> "$GITHUB_OUTPUT"
          fi
          if [[ "${{ inputs.repository }}" = "release" ]]; then
            release_latest=$(wget -q "https://registry.hub.docker.com/v2/repositories/perconalab/pmm-server/tags?page_size=25" -O - | jq -r .results[].name  | grep 3[.][0-9][.][0-9]$ | sort -V | tail -n1)
            echo "IMAGE=perconalab/pmm-server:$release_latest" >> "$GITHUB_OUTPUT"
          fi

      - name: "Setup Pmm Server: ${{ inputs.pmm_server_start_version }}"
        working-directory: ./pmm-ui-tests
        run: |
          echo "Upgrading to: ${{ steps.pmm_server_to_image.outputs.IMAGE }}"
          PWD=$(pwd) PMM_SERVER_UPGRADE_IMAGE=${{ steps.pmm_server_to_image.outputs.IMAGE }} PMM_SERVER_IMAGE=perconalab/pmm-server:${{ inputs.pmm_server_start_version }} docker compose up -f docker-compose-upgrade.yml -d --quiet-pull
          docker logs watchtower
          sleep 60
          bash -x testdata/db_setup.sh
