name: Test pipeline
on:
  # run with default inputs
  push:
    branches:
      - main
  pull_request:

  workflow_dispatch:
    inputs:
      server_image:
        description: "pmm-server docker image, default perconalab/pmm-server:dev-latest"
        required: true
        type: string
      client_version:
        description: "pmm2-client version Tarball or Dev-latest, default is dev-latest"
        required: true
        type: string
      client_image:
        description: "pmm2-client docker image, default perconalab/pmm-client:dev-latest"
        required: true
        type: string
      pmm_qa_branch:
        description: "Branch for PMM-QA to checkout"
        required: false
        type: string

jobs:
  bats-testsuite:
    runs-on: ubuntu-latest
    env:
      PMM_QA_BRANCH: ${{ github.event.inputs.pmm_qa_branch || 'main' }}
      SERVER_IMAGE: ${{ github.event.inputs.server_image || 'perconalab/pmm-server:dev-latest' }}
      CLIENT_IMAGE: ${{ github.event.inputs.client_image || 'perconalab/pmm-client:dev-latest' }}
      CLIENT_VERSION: ${{ github.event.inputs.client_version || 'dev-latest' }}
      GH_API_TOKEN: ${{ secrets.GH_API_TOKEN }}
    strategy:
      matrix:
        db-type: [ps5.7, ps8]

    steps:
      - name: Checkout PMM-QA tests when Workflow_dispatch
        if: ${{ github.event_name == 'workflow_dispatch' || github.event_name = 'push' }}
        uses: percona-platform/checkout@v2
        with:
          ref: ${{ env.PMM_QA_BRANCH }}
          repository: percona/pmm-qa
          path: ./
      - name: Checkout PMM-QA tests when pull_request
        if: ${{ github.event_name == 'pull_request' }}
        uses: percona-platform/checkout@v2
        with:
          ref: ${{ github.ref }}
          path: ./

      - name: Setup tools
        run: npm install -g bats

      - name: Setup PMM2-Server
        run: |
          docker create -v /srv --name pmm-server-data ${{ env.SERVER_IMAGE }}
          docker run -d -p 80:80 -p 443:443 -p 9000:9000 --volumes-from pmm-server-data --name pmm-server --restart always ${{ env.SERVER_IMAGE }}
          sleep 30

      - name: Setup PMM2-Client
        run: sudo bash -x ./pmm-tests/pmm2-client-setup.sh --pmm_server_ip 127.0.0.1 --client_version ${{ env.CLIENT_VERSION }} --admin_password admin --use_metrics_mode no

      - name: Run Setup for ps5.7
        if: ${{ matrix.db-type == 'ps5.7' }}
        run: sudo bash -x ./pmm-tests/pmm-framework.sh --addclient=ps,1 --ps-version=5.7 --pmm2

      - name: Run Setup for ps8.0
        if: ${{ matrix.db-type == 'ps8' }}
        run: sudo bash -x ./pmm-tests/pmm-framework.sh --addclient=ps,1 --ps-version=8 --pmm2

      - name: Run bats tests for PS
        if: ${{ matrix.db-type == 'ps5.7' || matrix.db-type == 'ps8' }}
        run: sudo bats ./pmm-tests/pmm-2-0-bats-tests/ps-specific-tests.bats
