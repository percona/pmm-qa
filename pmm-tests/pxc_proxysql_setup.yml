# This playbook does following:
#   enables Percona testing repository

- hosts: all
  become: true
  become_method: sudo
  vars:
    pxc_version: "{{ lookup('vars', 'extra_pxc_version', default=lookup('env','PXC_VERSION') | default('8', true) ) }}"
    pxc_tarball: "{{ lookup('vars', 'extra_pxc_tarball', default=lookup('env','PXC_TARBALL') | default('', true) ) }}"
    proxysql_version: "{{ lookup('vars', 'extra_proxysql_version', default=lookup('env','PROXYSQL_VERSION') | default('2', true) ) }}"
    proxysql_package: "{{ lookup('vars', 'extra_proxysql_package', default=lookup('env','PROXYSQL_PACKAGE') | default('', true) ) }}"
    pxc_container: "{{ lookup('vars', 'extra_pxc_container', default=lookup('env','PXC_CONTAINER') | default('pxc_container', true) ) }}"
    pmm_server_ip: "{{ lookup('vars', 'extra_pmm_server_ip', default=lookup('env','PMM_SERVER_IP') | default('host.docker.internal', true) ) }}"
    client_version: "{{ lookup('vars', 'extra_client_version', default=lookup('env','CLIENT_VERSION') | default('dev-latest', true) ) }}"
    admin_password: "{{ lookup('vars', 'extra_admin_password', default=lookup('env','ADMIN_PASSWORD') | default('admin', true) ) }}"
    pmm_qa_branch: "{{ lookup('vars', 'extra_pmm_qa_branch', default=lookup('env','PMM_QA_GIT_BRANCH') | default('main', true) ) }}"
    number_of_nodes: "{{ lookup('vars', 'extra_number_of_nodes', default=lookup('env','PXC_NODES') | default('3', true) ) }}"
    pxc_dev_cluster: "{{ lookup('vars', 'extra_pxc_cluster_name', default=lookup('env','PXC_CLUSTER_NAME') | default('pxc-dev-cluster', true) ) }}"
    query_source: "{{ lookup('vars', 'extra_query_source', default=lookup('env','QUERY_SOURCE') | default('perfschema', true) ) }}"

  tasks:
  - name: cleanup container for client and DB setup
    shell: >
      docker ps -a --filter "name={{ pxc_container }}" | grep -q . && docker stop {{ pxc_container }} && docker rm -fv {{ pxc_container }}
    ignore_errors: true
    tags:
      - cleanup

  - name: Create pmm-qa network if not exist
    shell: docker network create pmm-qa
    ignore_errors: true

  - name: Prepare Container for PXC and Proxysql
    shell: >
      docker run -d --name={{ pxc_container }}
      phusion/baseimage:jammy-1.0.1
  
  - name: Copy all required Artifacts to the docker pxc_container
    shell: "{{ item }}"
    with_items:
      - docker exec {{ pxc_container }} mkdir -p artifacts
      - docker cp ./client_container_pxc_setup.sh {{ pxc_container }}:/
      - docker cp ./client_container_proxysql_setup.sh {{ pxc_container }}:/

  - name: Get PXC Product tarball URL based on the version
    shell: cat product_version_download_helper | grep pxc | grep "\-{{ pxc_version }}" | head -1 | awk -F'# ' '{print $3}'
    register: tarball
    when: lookup('env', 'PXC_TARBALL') == ''

  - name: Set PXC Product URL if environment or paramater are not defined
    set_fact:
      pxc_tarball: "{{tarball.stdout | default(pxc_tarball,true)}}"

  - name: Get ProxySQL Product package URL based on the version
    shell: cat product_version_download_helper | grep proxysql | grep "\-{{ proxysql_version }}" | head -1 | awk -F'# ' '{print $3}'
    register: package
    when: lookup('env', 'PROXYSQL_PACKAGE') == ''

  - name: Set ProxySQL Product URL if environment or paramater are not defined
    set_fact:
      proxysql_package: "{{package.stdout | default(proxysql_package,true)}}"

  - name : Get filename from URL for ProxySQL
    shell: basename {{ proxysql_package }}    
    register: file_name

  - name: Execute User & Proxysql Setup inside the PXC pxc_container
    shell: "{{ item }}"
    with_items:
      - docker exec {{ pxc_container }} apt-get update
      - docker exec {{ pxc_container }} apt-get -y install wget curl git gnupg2 lsb-release debconf-utils
      - docker exec {{ pxc_container }} apt-get -y install libaio1 libaio-dev libnuma-dev socat
      - docker exec {{ pxc_container }} adduser --disabled-password --gecos "" pxc
      - docker exec {{ pxc_container }} wget {{ proxysql_package }}
      - docker exec {{ pxc_container }} dpkg -i {{ file_name.stdout }}
      - docker exec {{ pxc_container }} apt install -y sysbench

  - name: Install pmm2-client on the pxc_container
    shell: "{{ item }}"
    with_items:
      - docker exec {{ pxc_container }} wget https://raw.githubusercontent.com/percona/pmm-qa/{{ pmm_qa_branch }}/pmm-tests/pmm2-client-setup.sh
      - docker network connect pmm-qa {{ pxc_container }}
      - docker exec {{ pxc_container }} bash -x ./pmm2-client-setup.sh --pmm_server_ip {{ pmm_server_ip }} --client_version {{ client_version }} --admin_password {{ admin_password }} --use_metrics_mode no
      - docker exec {{ pxc_container }} usermod -aG pmm-agent pxc

  - name: Execute User & Proxysql Setup inside the PXC pxc_container
    shell: "{{ item }}"
    with_items:
      - docker exec {{ pxc_container }} percona-release enable-only tools release
      - docker exec {{ pxc_container }} apt-get update
      - docker exec {{ pxc_container }} apt-get install -y percona-xtrabackup-24
    when: pxc_version == "5.7"

  - name: Execute Setup script inside the PXC pxc_container
    shell: "{{ item }}"
    with_items:
      - docker exec {{ pxc_container }} chmod 1777 /tmp
      - docker exec --user pxc {{ pxc_container }} bash -xe ./client_container_pxc_setup.sh --pxc_version {{ pxc_version }} --pxc_tarball {{ pxc_tarball }} --number_of_nodes {{ number_of_nodes }} --pxc_dev_cluster {{ pxc_dev_cluster }} --query_source {{query_source}} > setup_pxc_{{ pxc_version }}.log

  - name: Start ProxySQL inside the PXC extra_pxc_container
    shell: "{{ item }}"
    with_items:
      - docker exec {{ pxc_container }} bash -c 'sed -i s#3306#'"\$(grep 'port' /home/pxc/PXC/node1.cnf | cut -d= -f2)"'# /etc/proxysql.cnf'
      - docker exec {{ pxc_container }} proxysql -c /etc/proxysql.cnf
      - docker exec {{ pxc_container }} sleep 20
      - docker exec {{ pxc_container }} bash -c 'sed -i s#3306#'"\$(grep 'port' /home/pxc/PXC/node1.cnf | cut -d= -f2)"'# /etc/proxysql-admin.cnf'
      - docker exec {{ pxc_container }} proxysql-admin --config-file=/etc/proxysql-admin.cnf --enable
      - docker exec {{ pxc_container }} sleep 20
      - docker exec {{ pxc_container }} pmm-admin add proxysql --username=admin --password=admin --service-name=my-new-proxysql_{{ pxc_container }} --host=127.0.0.1 --port=6032

  - name: Execute Service, Sysbench Script inside the PXC pxc_container
    shell: "{{ item }}"
    with_items:
      - docker exec {{ pxc_container }} bash -xe ./client_container_proxysql_setup.sh  > setup_proxy_{{ pxc_version }}.log

